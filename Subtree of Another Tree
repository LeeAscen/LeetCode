# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isSubtree(self, s, t):
        """
        :type s: TreeNode
        :type t: TreeNode
        :rtype: bool
        """
        def isSame(s,t):
            # if s==None and t==None:
            #     return True
            # elif s==None or t==None:
            #     return False
            if not(s and t):
                return s is t
            return (s.val == t.val and 
            isSame(s.left, t.left) and 
            isSame(s.right, t.right))
        
        if t ==None:
            return True
        elif s==None:
            return False
        if isSame(s,t):
            return True
        else:
            return self.isSubtree(s.left, t) or self.isSubtree(s.right, t)
        
