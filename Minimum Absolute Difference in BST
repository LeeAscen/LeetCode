# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def getMinimumDifference(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        a = []; s=[]
        while root!=None or s:
            while root!=None:
                #if root.val:
                a.append(root.val)
                s.append(root)
                root = root.left
            if s:
                root = s.pop().right
        a.sort()
        diff = float('inf')
        for i in range(1, len(a)):
            diff = min(diff, a[i]-a[i-1])
        return diff
    
    #二叉排序树中序遍历为升序
    def getMinimumDifference(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        s = [];
        diff = float('inf')
        temp = -diff
        while root!=None or s:
            while root!=None:
                s.append(root)
                root = root.left
            if s:
                root = s.pop()
                diff = min(diff, root.val-temp)
                temp = root.val
                root = root.right
        return diff   
